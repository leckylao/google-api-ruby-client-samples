<!DOCTYPE html>
<html>
  <head>
    <meta charset='utf-8' />
  </head>
  <body>
    <!--Add a button for the user to click to initiate auth sequence -->
    <button id="authorize-button" style="visibility: hidden">Authorize</button>
    <% if params[:status] == 'started' %>
      <h2>Close window to stop</h2>
    <% else %>
      <form action="<%= request.url %>" method="get">
        <input type="hidden" name="status" value="started" />
        <input type="submit" value="Start">
      </form>
    <% end %>
    <script type="text/javascript">
      // Enter a client ID for a web application from the Google Developer Console.
      // The provided clientId will only work if the sample is run directly from
      // https://google-api-javascript-client.googlecode.com/hg/samples/authSample.html
      // In your Developer Console project, add a JavaScript origin that corresponds to the domain
      // where you will be running the script.
      // var clientId = '837050751313';
      var clientId = '804239669002-vamj30oidncb2qve8nr8rnlb018nf1jt.apps.googleusercontent.com';

      // Enter the API key from the Google Develoepr Console - to handle any unauthenticated
      // requests in the code.
      // The provided key works for this sample only when run from
      // https://google-api-javascript-client.googlecode.com/hg/samples/authSample.html
      // To use in your own application, replace this API key with your own.
      // var apiKey = 'AIzaSyAdjHPT5Pb7Nu56WJ_nlrMGOAgUAtKjiPM';
      var apiKey = 'AIzaSyCB2Wxr6YkiA7G2h8zC-YCUzJUOZbEMIbo';

      // To enter one or more authentication scopes, refer to the documentation for the API.
      // var scopes = 'https://www.googleapis.com/auth/plus.me';
      var scopes = 'https://www.googleapis.com/auth/gmail.readonly';

      // Use a button to handle authentication the first time.
      function handleClientLoad() {
        gapi.client.setApiKey(apiKey);
        if(localStorage.getItem('secret') === null)
          window.setTimeout(checkAuth,1);
        else
          makeApiCall();
      }

      function checkAuth() {
        gapi.auth.authorize({client_id: clientId, scope: scopes, immediate: true}, handleAuthResult);
      }


      function handleAuthResult(authResult) {
        var authorizeButton = document.getElementById('authorize-button');
        if (authResult && !authResult.error) {
          authorizeButton.style.visibility = 'hidden';
          makeApiCall();
        } else {
          authorizeButton.style.visibility = '';
          authorizeButton.onclick = handleAuthClick;
        }
      }

      function handleAuthClick(event) {
        gapi.auth.authorize({client_id: clientId, scope: scopes, immediate: false}, handleAuthResult);
        return false;
      }

      // Load the API and make an API call.  Display the results on the screen.
      function makeApiCall() {
        // gapi.client.load('plus', 'v1', function() {
        gapi.client.load('gmail', 'v1', function() {
          // var request = gapi.client.plus.people.get({
          var request = gapi.client.gmail.users.messages.list({
            'userId': 'leckylao@gmail.com',
            'q': 'subject:test'
          });
          request.execute(function(resp){
            console.log(resp.messages);
            console.log(resp.messages[0].id);
            var latest = resp.messages[0].id;
            if(localStorage.getItem('latest') !== null){
              if(localStorage.getItem('latest') !== latest){
                localStorage.setItem('latest', latest);
                request = gapi.client.gmail.users.messages.send({
                  'userId': 'leckylao@gmail.com',
                  'raw': <%= %('#{@raw}') %>
                });
                request.execute(function(resp){
                  console.log("Email sent successfully");
                  show("Email sent successfully");
                  console.log(resp);
                });
              }
              else
                console.log("No new email");
                show("No new email");
                reload();
            }
            else{
              localStorage.setItem('latest', latest);
              console.log("Latest email stored");
              show("Latest email stored");
              reload();
            }
          });
          // request.execute(function(resp) {
          //   var heading = document.createElement('h4');
          //   var image = document.createElement('img');
          //   image.src = resp.image.url;
          //   heading.appendChild(image);
          //   heading.appendChild(document.createTextNode(resp.displayName));

          //   document.getElementById('content').appendChild(heading);
          // });
        });
      }

      function reload(){
        if(location.search === '?status=started'){
          window.location = location.href;
  }
      }

      function show(text){
        var heading = document.createElement('h2');
        heading.appendChild(document.createTextNode(text));
        document.getElementById('content').appendChild(heading);
      }
    </script>
    <script src="https://apis.google.com/js/client.js?onload=handleClientLoad"></script>
    <div id="content"></div>
  </body>
</html>
